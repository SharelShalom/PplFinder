{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","theme/context.js","components/SearchBox/searchBox.jsx","components/UserList/UserList.js","hooks/usePeopleFetch.js","pages/Home/style.js","pages/Home/Home.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Favorite/style.js","pages/Favorite/Favorite.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","FavoriteContext","React","createContext","SearchBox","type","name","className","placeholder","e","currentTarget","users","isLoading","onLoadMore","useState","hoveredUserId","setHoveredUserId","searchQuery","setSearchQuery","selectedCountries","setSelectedCountries","useContext","profileFavorites","setProfileFavorites","useEffect","savedFavoriteUsers","JSON","parse","localStorage","getItem","handleMouseLeave","handleChange","includes","filter","c","filtered","length","user","nat","u","first","toLowerCase","startsWith","last","query","id","dataLength","next","hasMore","scrollableTarget","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","title","email","location","street","number","city","country","onClick","profileFavoritesLocalStorage","fuser","indexOf","splice","push","setItem","stringify","handleHeart","IconButton","usePeopleFetch","setUsers","page","setPage","setIsLoading","fetchUsers","a","axios","get","response","loadedUsers","data","results","prevUsers","Home","Content","Header","loadMore","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","useMemo","createMuiTheme","palette","primary","main","error","CssBaseline","NavBar","history","useHistory","AppBar","position","style","top","Tabs","pathname","newValue","aria-label","indicatorColor","textColor","Tab","Favorite","Favorites","AppRouter","favoriteUsers","setFavoriteUsers","numOfPage","setNumOfPage","isBottom","setIsBottom","Provider","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ace83db3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={() => onChange(value)} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nconst FavoriteContext = React.createContext();\r\n\r\nexport default FavoriteContext;","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return ( \r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          className=\"form-control my-3\"\r\n          placeholder=\"Search...\"\r\n          value={value}\r\n          onChange={e => onChange(e.currentTarget.value)}\r\n         />\r\n     );\r\n};\r\n \r\nexport default SearchBox;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport FavoriteContext from \"theme/context\";\r\nimport SearchBox from \"components/SearchBox/searchBox\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\nconst UserList = ({ users, isLoading, onLoadMore }) => {\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n  const { profileFavorites, setProfileFavorites } = useContext(FavoriteContext);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const savedFavoriteUsers = JSON.parse(localStorage.getItem(\"profileFavorites\"));\r\n    if (savedFavoriteUsers)\r\n      setProfileFavorites(savedFavoriteUsers);\r\n  }, []);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n\r\n    if (!selectedCountries.includes(value)) {\r\n      setSelectedCountries([...selectedCountries, value]);\r\n    }\r\n    else {\r\n      setSelectedCountries(selectedCountries.filter(c => c !== value));\r\n    }\r\n  };\r\n\r\n  const handleSearch = query => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n\r\n  const handleHeart = (user) => {\r\n    const profileFavoritesLocalStorage = [...profileFavorites];\r\n\r\n    var index;\r\n    if (!profileFavorites.includes(user)) {\r\n      setProfileFavorites([...profileFavorites, user])\r\n      profileFavoritesLocalStorage.push(user);\r\n    }\r\n    else {\r\n      setProfileFavorites(profileFavorites.filter(fuser => fuser !== user));\r\n      index = profileFavoritesLocalStorage.indexOf(user);\r\n      profileFavoritesLocalStorage.splice(index, 1);\r\n    }\r\n    localStorage.setItem(\"profileFavorites\", JSON.stringify(profileFavoritesLocalStorage));\r\n  };\r\n\r\n  let filtered = (selectedCountries.length === 0) ? users : users.filter(user => selectedCountries.includes(user.nat));\r\n\r\n  if (searchQuery)\r\n    filtered = filtered.filter(u =>\r\n      (u.name.first.toLowerCase().startsWith(searchQuery.toLowerCase())) ||\r\n      (u.name.last.toLowerCase().startsWith(searchQuery.toLowerCase()))\r\n    );\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={handleChange} isChecked={selectedCountries.includes(\"BR\")} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={handleChange} isChecked={selectedCountries.includes(\"AU\")} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={handleChange} isChecked={selectedCountries.includes(\"CA\")} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={handleChange} isChecked={selectedCountries.includes(\"DE\")} />\r\n        <CheckBox value=\"ES\" label=\"Spain\" onChange={handleChange} isChecked={selectedCountries.includes(\"ES\")} />\r\n      </S.Filters>\r\n      <SearchBox value={searchQuery} onChange={handleSearch} />\r\n      <S.List id=\"scrollableDiv\">\r\n        <InfiniteScroll\r\n          dataLength={filtered.length} //This is important field to render the next data\r\n          next={onLoadMore}\r\n          hasMore={true}\r\n          scrollableTarget={\"scrollableDiv\"}\r\n        >\r\n          {filtered.map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={index === hoveredUserId || profileFavorites.includes(user)} onClick={() => handleHeart(user)}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n          })}\r\n\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        </InfiniteScroll>\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=${page}`);\r\n    setIsLoading(false);\r\n    setPage(page => page + 1)\r\n    const loadedUsers = response.data.results;\r\n    setUsers(prevUsers => [...prevUsers, ...loadedUsers]);\r\n  }\r\n\r\n  return { users, setUsers, isLoading, setIsLoading, fetchUsers };\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users,  isLoading, fetchUsers } = usePeopleFetch();\r\n\r\n  const loadMore = async () => {\r\n    fetchUsers()\r\n  };\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} onLoadMore={loadMore} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e, newValue) => {\r\n    history.push(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={history.location.pathname}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab value='/' label=\"Home\" />\r\n        <Tab value='/favorites' label=\"Favorites\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import styled from \"styled-components\";\r\n\r\nexport const Favorite = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, {useContext} from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport FavoriteContext from \"theme/context\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  const {profileFavorites, setProfileFavorites} = useContext(FavoriteContext);\r\n  \r\n  return (\r\n    <S.Favorite>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder - Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={profileFavorites} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Favorite>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, {useState} from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport Favorites from './pages/Favorite/Favorite';\r\nimport FavoriteContext from \"theme/context\";\r\n\r\nconst AppRouter = () => {\r\n  const [favoriteUsers, setFavoriteUsers] = useState([]);\r\n  const [profileFavorites, setProfileFavorites] = useState([]);\r\n\r\n  //Infinity scroll\r\n  \r\n  const [numOfPage, setNumOfPage] = useState(0);\r\n  const [isBottom, setIsBottom] = useState(false);\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <FavoriteContext.Provider value = {{ favoriteUsers, setFavoriteUsers, profileFavorites, setProfileFavorites, numOfPage, setNumOfPage, isBottom, setIsBottom }}>\r\n       <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n       </Router>\r\n      </FavoriteContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}